<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wAA1werna59SAAAAABJRU5ErkJggg==
</value>
  </data>
</root>